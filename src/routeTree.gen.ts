/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const IndexLazyRouteImport = createFileRoute('/')()
const TokenIndexLazyRouteImport = createFileRoute('/token/')()
const GalleryIndexLazyRouteImport = createFileRoute('/gallery/')()
const DesignIndexLazyRouteImport = createFileRoute('/design/')()
const CalendarIndexLazyRouteImport = createFileRoute('/calendar/')()

const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const TokenIndexLazyRoute = TokenIndexLazyRouteImport.update({
  id: '/token/',
  path: '/token/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/token/index.lazy').then((d) => d.Route))
const GalleryIndexLazyRoute = GalleryIndexLazyRouteImport.update({
  id: '/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/gallery/index.lazy').then((d) => d.Route))
const DesignIndexLazyRoute = DesignIndexLazyRouteImport.update({
  id: '/design/',
  path: '/design/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/design/index.lazy').then((d) => d.Route))
const CalendarIndexLazyRoute = CalendarIndexLazyRouteImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/calendar/index.lazy').then((d) => d.Route),
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/calendar': typeof CalendarIndexLazyRoute
  '/design': typeof DesignIndexLazyRoute
  '/gallery': typeof GalleryIndexLazyRoute
  '/token': typeof TokenIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/calendar': typeof CalendarIndexLazyRoute
  '/design': typeof DesignIndexLazyRoute
  '/gallery': typeof GalleryIndexLazyRoute
  '/token': typeof TokenIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/calendar/': typeof CalendarIndexLazyRoute
  '/design/': typeof DesignIndexLazyRoute
  '/gallery/': typeof GalleryIndexLazyRoute
  '/token/': typeof TokenIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/calendar' | '/design' | '/gallery' | '/token'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/calendar' | '/design' | '/gallery' | '/token'
  id: '__root__' | '/' | '/calendar/' | '/design/' | '/gallery/' | '/token/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CalendarIndexLazyRoute: typeof CalendarIndexLazyRoute
  DesignIndexLazyRoute: typeof DesignIndexLazyRoute
  GalleryIndexLazyRoute: typeof GalleryIndexLazyRoute
  TokenIndexLazyRoute: typeof TokenIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/token/': {
      id: '/token/'
      path: '/token'
      fullPath: '/token'
      preLoaderRoute: typeof TokenIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/design/': {
      id: '/design/'
      path: '/design'
      fullPath: '/design'
      preLoaderRoute: typeof DesignIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CalendarIndexLazyRoute: CalendarIndexLazyRoute,
  DesignIndexLazyRoute: DesignIndexLazyRoute,
  GalleryIndexLazyRoute: GalleryIndexLazyRoute,
  TokenIndexLazyRoute: TokenIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
